#!/usr/bin/env node

'use strict';

const fs = require('fs');
const path = require('path');

const meow = require('meow');
const inquirer = require('inquirer');
const _ = require('lodash');

const codeAnalyzer = require('../lib');
const Logger = require('../lib/logger');
const FileUtils = require('../lib/utils/file');
const ReportFormatEnum = require('../lib/enums/report-format');

let cwd = process.cwd();

if (FileUtils.hasPackageJsonFile(cwd)) {
    const cli = meow(
        fs.readFileSync(path.resolve(path.join(__dirname, './resources/help.txt'))).toString(),
        {
            'flags': {
                'init': {
                    'type': 'boolean',
                    'alias': 'i'
                }
            }
        }
    );

    if (cli.flags.init) {
        // Use of inquirer
        const possibleDirectories = FileUtils.getBaseDirectories(cwd);

        inquirer
            .prompt([
                {
                    'type': 'checkbox',
                    'name': 'baseDirectories',
                    'message': 'Please choose on which folder(s) do you want to run your code analyzing',
                    'choices': possibleDirectories.map(folderName => {
                        return {
                            'name': folderName,
                            'checked': false
                        };
                    }),
                    'validate': function (inputs) {
                        return !!(inputs && inputs.length > 0);
                    }
                },
                {
                    'type': 'list',
                    'name': 'reportFormat',
                    'message': 'Please choose report format',
                    'default': 'console',
                    'choices': _.map(ReportFormatEnum, (value) => value)
                }
            ])
            .then(options => codeAnalyzer({ cwd, 'baseDirectories': options.baseDirectories, 'reportFormat': options.reportFormat }))
            .catch((err) => {
                Logger.error('An error occured');
                Logger.error(err);
                process.exit(1);
            });

    } else {
        codeAnalyzer({ cwd, 'baseDirectories': ['app', 'bin', 'lib', 'src'] })
            .catch((err) => {
                Logger.error('An error occured');
                Logger.error(err);
                process.exit(1);
            });
    }

} else {
    Logger.error('Sorry, but package.json file was detected');
    Logger.error('For more details, please do codeanalyzer --help');
}


